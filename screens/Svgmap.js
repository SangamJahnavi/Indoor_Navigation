import * as React from "react";
import Svg, { G, Path, Defs, ClipPath, Circle, Line, Ellipse } from "react-native-svg";
import { View, TouchableOpacity, StyleSheet ,Text ,RefreshControl, Modal , Button} from "react-native";
import { useState } from "react";
import { ReactNativeZoomableView } from '@openspacelabs/react-native-zoomable-view';
// import SvgPanZoom, { SvgPanZoomElement } from 'react-native-svg-pan-zoom';

const SvgComponent = (props) => {
  const [c1,setC1]=useState("#979188")
  const [c3, setC3] = useState("#979188");
  const [c2, setC2] = useState("#979188");
  const [c4, setC4] = useState("#979188");
  const [c5, setC5] = useState("#979188");
  const [c6, setC6] = useState("#979188");
  const [c7, setC7] = useState("#979188");
  const [c8, setC8] = useState("#979188");
  const [c9, setC9] = useState("#979188");
  const [c10, setC10] = useState("#979188");
  const [c11, setC11] = useState("#979188");
  const [c12, setC12] = useState("#979188");
  const [c13, setC13] = useState("#979188");
  const [c14, setC14] = useState("#979188");
  const [c15, setC15] = useState("#979188");
  const [c16, setC16] = useState("#979188");
  const [c17, setC17] = useState("#979188");
  const [c18, setC18] = useState("#979188");
  const [c19, setC19] = useState("#979188");
  const [c20, setC20] = useState("#979188");
  const [c21, setC21] = useState("#979188");
  const [c22, setC22] = useState("#979188");
  const [c23, setC23] = useState("#979188");
  const [c24, setC24] = useState("#979188");
  const [c25, setC25] = useState("#979188");
  const [k,setk] = useState("");
  const [k1,setk1] = useState("");
  const [j, setj] = useState(0);
  // const[modal,setmodal]=useState(false)
  const [loc,setloc] = useState(false);
  // const [showValue, setShowValue] = useState(false);
const reload=()=>{
  setk("");
  setk1("");
  setj(0);
  setC1("#979188")
  setC2("#979188")
  setC3("#979188")
  setC4("#979188")
  setC5("#979188")
  setC6("#979188")
  setC7("#979188")
  setC8("#979188")
  setC9("#979188")
  setC10("#979188")
  setC11("#979188")
  setC12("#979188")
  setC13("#979188")
  setC14("#979188")
  setC15("#979188")
  setC16("#979188")
  setC17("#979188")
  setC18("#979188")
  setC19("#979188")
  setC20("#979188")
  setC21("#979188")
  setC22("#979188")
  setC23("#979188")
  setC24("#979188")
  setC25("#979188")
}

  const update=()=>{
    console.log(k)
    console.log(k1)
    function PriorityQueue () {
      this._nodes = [];
    
      this.enqueue = function (priority, key) {
        this._nodes.push({key: key, priority: priority });
        this.sort();
      };
      this.dequeue = function () {
        return this._nodes.shift().key;
      };
      this.sort = function () {
        this._nodes.sort(function (a, b) {
          return a.priority - b.priority;
        });
      };
      this.isEmpty = function () {
        return !this._nodes.length;
      };
    }
    
    
    function Graph(){
      var INFINITY = 1/0;
      this.vertices = {};
    
      this.addVertex = function(name, edges){
        this.vertices[name] = edges;
      };
    
      this.shortestPath = function (start, finish) {
        var nodes = new PriorityQueue(),
            distances = {},
            previous = {},
            path = [],
            smallest, vertex, neighbor, alt;
    
        for(vertex in this.vertices) {
          if(vertex === start) {
            distances[vertex] = 0;
            nodes.enqueue(0, vertex);
          }
          else {
            distances[vertex] = INFINITY;
            nodes.enqueue(INFINITY, vertex);
          }
    
          previous[vertex] = null;
        }
    
        while(!nodes.isEmpty()) {
          smallest = nodes.dequeue();
    
          if(smallest === finish) {
            path = [];
    
            while(previous[smallest]) {
              path.push(smallest);
              smallest = previous[smallest];
            }
    
            break;
          }
    
          if(!smallest || distances[smallest] === INFINITY){
            continue;
          }
    
          for(neighbor in this.vertices[smallest]) {
            
            alt = distances[smallest] + this.vertices[smallest][neighbor];
    
            if(alt < distances[neighbor]) {
              distances[neighbor] = alt;
              previous[neighbor] = smallest;
    
              nodes.enqueue(alt, neighbor);
            }
          }
        }
    
        return path;
      };
    }
    
    var g = new Graph();
    g.addVertex('c1', {c2:4,c24:5});
    g.addVertex('c2', {c1:4,c3:3});
    g.addVertex('c3', {c2:3,c4:4});
    g.addVertex('c4', {c3:4,c25:5,c5:2});
    g.addVertex('c5', {c4:2,c6:2});
    g.addVertex('c6', {c5:2,c7:4});
    g.addVertex('c7', {c6:4,c17:2,c8:3});
    g.addVertex('c8', {c7:3,c9:4});
    g.addVertex('c9', {c8:4,c15:2,c10:3});
    g.addVertex('c10', {c9:3,c11:4});
    g.addVertex('c11', {c10:4,c12:4,c13:5});
    g.addVertex('c12', {c11:4});
    g.addVertex('c13', {c11:5,c14:5});
    g.addVertex('c14', {c13:5,c23:3,c16:4});
    g.addVertex('c15', {c9:2,c16:4});
    g.addVertex('c16', {c18:3,c15:4,c14:4});
    g.addVertex('c17', {c7:2,c18:3});
    g.addVertex('c18', {c19:1,c17:3,c16:3});
    g.addVertex('c19', {c18:1,c20:2});
    g.addVertex('c20', {c19:2,c21:1});
    g.addVertex('c21', {c20:3,c22:1});
    g.addVertex('c22', {c21:1,c23:2});
    g.addVertex('c23', {c22:2,c14:3});
    g.addVertex('c24', {c1:5,c25:3});
    g.addVertex('c25', {c24:3,c4:5});
    console.log(g.shortestPath(k, k1).concat([k]).reverse());
    let mmm=g.shortestPath(k,k1).concat([k]).reverse();
    console.log(mmm)
      for(let i=0;i<mmm.length;i++){
          // let m=mmm[i]
          console.log(mmm[i]);
          if(mmm[i]=="c1"){
            setC1("red")
          }
          if(mmm[i]=="c2"){
            setC2("red")
          }
          if(mmm[i]=="c3"){
            setC3("red")
          }
          if(mmm[i]=="c4"){
            setC4("red")
          }
          if(mmm[i]=="c5"){
            setC5("red")
          }
          if(mmm[i]=="c6"){
            setC6("red")
          }
          if(mmm[i]=="c7"){
            setC7("red")
          }
          if(mmm[i]=="c8"){
            setC8("red")
          }
          if(mmm[i]=="c9"){
            setC9("red")
          }
          if(mmm[i]=="c10"){
            setC10("red")
          }
          if(mmm[i]=="c11"){
            setC11("red")
          }
          if(mmm[i]=="c12"){
            setC12("red")
          }
          if(mmm[i]=="c13"){
            setC13("red")
          }
          if(mmm[i]=="c14"){
            setC14("red")
          }
          if(mmm[i]=="c15"){
            setC15("red")
          }
          if(mmm[i]=="c16"){
            setC16("red")
          }
          if(mmm[i]=="c17"){
            setC17("red")
          }
          if(mmm[i]=="c18"){
            setC18("red")
          }
          if(mmm[i]=="c19"){
            setC19("red")
          }
          if(mmm[i]=="c20"){
            setC20("red")
          }
          if(mmm[i]=="c21"){
            setC21("red")
          }
          if(mmm[i]=="c22"){
            setC22("red")
          }
          if(mmm[i]=="c23"){
            setC23("red")
          }
          if(mmm[i]=="c24"){
            setC24("red")
          }
          if(mmm[i]=="c25"){
            setC25("red")
          }
        }
}
  // console.log(w)
  let handlepress3=()=>{
    if(j==0){
      setC3("#1B06F1");
    setk("c3")
    setj(1);
    }
    
    else{
      setC3("#F82041");
    setk1("c3");
    setj(1);
    }

  }

  let handlepress1=()=>{
    if(j==0){
      setC1("#1B06F1");
    setk("c1");
    setj(1);
    setloc("ENTRANCE")
    
    }
    else{
      setC1("#F82041");
    setk1("c1");
    setj(1);
    //setmodal(true)
    setloc("ENTRANCE")
    }
  }
  let handlepress2=()=>{
    if(j==0){
      setC2("#1B06F1");
    setk("c2")
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-1")
    
    }
    else{
      setC2("#F82041");
    setk1("c2");
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    
    }
  }
  let handlepress4=()=>{
    if(j==0){
      setC4("#1B06F1");
    setk("c4")
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }else{
      setC4("#F82041");
    setk1("c4");
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }
  }
  let handlepress5=()=>{
    if(j==0){
      setC5("#1B06F1");
    setk("c5")
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }
     else{
      setC5("#F82041");
    setk1("c5");
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }
  }
  let handlepress6=()=>{
    if(j==0){
      setC6("#1B06F1");
    setk("c6")
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }
    else{
      setC6("#F82041");
    setk1("c6");
    setj(1);
   // setmodal(true)
    setloc("LIBRARY-2")
    }
  }
  let handlepress7=()=>{
    if(j==0){
      setC7("#1B06F1");
    setk("c7")
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }
    else{
      setC7("#F82041");
    setk1("c7");
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }
  }
  let handlepress8=()=>{
    if(j==0){
      setC8("#1B06F1");
    setk("c8")
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }
    else{
      setC8("#F82041");
    setk1("c8");
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }
  }
  let handlepress9=()=>{
    if(j==0){
      setC9("#1B06F1");
    setk("c9")
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }
    else{
      setC9("#F82041");
    setk1("c9");
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }
  }
  let handlepress10=()=>{
    if(j==0){
      setC10("#1B06F1");
    setk("c10")
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }
    else{
      setC10("#F82041");
    setk1("c10");
    setj(1);
    //setmodal(true)
    setloc("LIBRARY-2")
    }
  }
  let handlepress11=()=>{
    if(j==0){
      setC11("#1B06F1");
    setk("c11")
    setj(1);
    }
    else{
      setC11("#F82041");
    setk1("c11");
    setj(1);
    }
  }
  let handlepress12=()=>{
    if(j==0){
      setC12("#1B06F1");
    setk("c12")
    setj(1);
    }
    else{
      setC12("#F82041");
    setk1("c12");
    setj(1);
    }
  }
  let handlepress13=()=>{
    if(j==0){
      setC13("#1B06F1");
    setk("c13")
    setj(1);
    }
    else{
      setC13("#F82041");
    setk1("c13");
    setj(1);
    }
  }
  let handlepress14=()=>{
    if(j==0){
      setC14("#1B06F1");
    setk("c14")
    setj(1);
    }
    else{
      setC14("#F82041");
    setk1("c14");
    setj(1);
    }
  }
  let handlepress15=()=>{
    if(j==0){
      setC15("#1B06F1");
    setk("c15")
    setj(1);
    }
    else{
      setC15("#F82041");
    setk1("c15");
    setj(1);
    }
  }
  let handlepress16=()=>{
    if(j==0){
      setC16("#1B06F1");
    setk("c16")
    setj(1);
    }
    else{
      setC16("#F82041");
    setk1("c16");
    setj(1);
    }
  }
  let handlepress17=()=>{
    if(j==0){
      setC17("#1B06F1");
    setk("c17")
    setj(1);
    }
    else{
      setC17("#F82041");
    setk1("c17");
    setj(1);
    }
  }
  let handlepress18=()=>{
    if(j==0){
      setC18("#1B06F1");
    setk("c18")
    setj(1);
    }
    else{
      setC18("#F82041");
    setk1("c18");
    setj(1);
    }
  }
  let handlepress19=()=>{
    if(j==0){
      setC19("#1B06F1");
    setk("c19")
    setj(1);
    }
    else{
      setC19("#F82041");
    setk1("c19");
    setj(1);
    }
  }
  let handlepress20=()=>{
    if(j==0){
      setC20("#1B06F1");
    setk("c20")
    setj(1);
    }
     else{
      setC20("#F82041");
    setk1("c20");
    setj(1);
    }
  }
  let handlepress21=()=>{
    if(j==0){
      setC21("#1B06F1");
    setk("c21")
    setj(1);
    }
    else{
      setC21("#F82041");
    setk1("c21");
    setj(1);
    }
  }
  let handlepress22=()=>{
    if(j==0){
      setC22("#1B06F1");
    setk("c22")
    setj(1);
    }
    else{
      setC22("#F82041");
    setk1("c22");
    setj(1);
    }
  }
  let handlepress23=()=>{
    if(j==0){
      setC23("#1B06F1");
    setk("c23")
    setj(1);
    }
    else{
      setC23("#F82041");
    setk1("c23");
    setj(1);
    }
  }
  let handlepress24=()=>{
    if(j==0){
      setC24("#1B06F1");
    setk("c24")
    setj(1);
    }
    else{
      setC24("#F82041");
    setk1("c24");
    setj(1);
    }
  }
  let handlepress25=()=>{
    if(j==0){
      setC25("#1B06F1");
    setk("c25")
    setj(1);
    }
    else{
      setC25("#F82041");
    setk1("c25");
    setj(1);
    }
  }
  return (
    // <View>
    <ReactNativeZoomableView
    maxZoom={30}
    // contentWidth={200}
    // contentHeight={100}
    // bindToBorders={true}
    contentWidth={300}
    contentHeight={150}
    
    
    // bindToBorders={true}
  >
 
    <View style={styles.container} >

    
      <Svg
          width={377}
          height={640}
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          {...props}
          
        >
        <G clipPath="url(#a)">
      <Path fill="#D9D9D9" d="M0 0h373v622H0z" />
      <Path d="M230 527v-32M124 72h9" stroke="#000" />
      <Path d="M142 181V86h53v95h-53Z" fill="#995E5E" stroke="#000" />
      <Path d="M195 172V86h86v86h-86Z" fill="#B1A89B" stroke="#000" />
      <Path d="M281 185V86h50v99h-50Z" fill="#995E5E" stroke="#000" />
      <Path d="M303 230v-19h65v19h-65Z" fill="#514E4B" stroke="#000" />
      <Path
        d="M117.215 69H133v88H35v-15.373h22.362v-8.482l44.068-54.073h15.785V69ZM369 451H53l68.724 84H369v-84Z"
        fill="#D9D9D9"
        stroke="#000"
      />
      <Path
        d="M208.772 207 168 255.509v66.526L208.772 365h61.862L310 322.035v-66.526L270.634 207h-61.862Z"
        fill="#92AB95"
        stroke="#000"
      />
      <Path
        d="M244 336h-11c-27.614 0-50-22.386-50-50s22.386-50 50-50h11c27.614 0 50 22.386 50 50s-22.386 50-50 50Z"
        fill="#8EB5A9"
        stroke="#000"
      />
      <Path
        d="M117.4 157H82v101h83.4l39.6-47.529h-87.6V157ZM82 317v97l85-97H82ZM124 453l82-88v88h-82Z"
        fill="#995E5E"
        stroke="#000"
      />
      <Path d="M52.5 253h-8.75v-17h15.48l2.02 17H52.5Z" fill="#685D5D" />
      <Path
        d="M35 253h8.75M70 253h-8.75m-17.5 0h17.5m-17.5 0v-17h15.48l2.02 17"
        stroke="#000"
      />
      <Path d="M48.588 334v-16h11.647v16H48.588Z" fill="#685D5D" />
      <Path
        d="M35 318h13.588m0 0v16h11.647v-16m-11.647 0h11.647m0 0H68"
        stroke="#000"
      />
      <Path
        d="m150 255 37.849-45H205l-40.806 45H150Z"
        fill="#6D8252"
        stroke="#000"
      />
      <Path d="M189 441v12h17v-12h-17Z" fill="#B1A89B" stroke="#000" />
      <Path d="M150 273h18v8.784h-18v8.785h18V301h-18v-28Z" fill="#685D5D" />
      <Path
        d="M150 290.569V301h18v-10.431h-18Zm0 0v-8.785m0 0V273h18v8.784h-18Z"
        stroke="#000"
      />
      <Path
        d="m177.255 331.296 24.796 24.688-19.48 15.487-8.265-8.229L159 375.411l-7.577-7.543 15.306-12.169-8.955-8.915 19.481-15.488Z"
        fill="#618092"
        stroke="#000"
      />
      <Path d="M112 69v11h12V69h-12Z" fill="#685D5D" stroke="#000" />
      <Path d="M85 266v33M264 445v26" stroke="#000" />
      <Path d="M195 510h-67v17h67v-17Z" fill="#6D8252" stroke="#000" />
      <Path
        d="M252 369h-31v17.346h31V369ZM239.235 427H252v-30.355h-12.765V427Z"
        fill="#618092"
      />
      <Path
        d="M252 369h-31v17.346h31V369ZM239.235 427H252v-30.355h-12.765V427Z"
        stroke="#000"
      />
      <Path d="M220 419h16v29h-16v-29Z" fill="#764084" stroke="#000" />
      <Path d="M226 386v12m0 12v-12m0 0h13" stroke="#000" />
      <Path
        d="M311.526 230H369v221H261v-85.411h10.105l40.421-42.705v-68.328h13.263v-11.744L311.526 230Z"
        fill="#618092"
        stroke="#000"
      />
      <Path d="M111 299v13M50 344v18M52 374v17M309 454v17" stroke="#000" />
      <Path d="M367 452h-19v33h19v-33Z" fill="#995E5E" stroke="#000" />
      <Path
        d="M287 527v-15.467h60.293V503H368v24h-81ZM217 527v-12h45v12h-45ZM305.426 253.748l-32.619-38.178 13.414-16.673 35.889 41.288-.154 13.376-16.53.187Z"
        fill="#6D8252"
        stroke="#000"
      />
      <Path d="M161 205v-12h15v12h-15Z" fill="#764084" stroke="#000" />
      <Path
        d="M307 190v12M207 454v20M211 527v-40M237 211v-13M114 316v-23"
        stroke="#000"
      />
      <Path d="M39 157v-13h20v13H39Z" fill="#6D8252" stroke="#000" />
      <Path
        d="M38 454h18.6l65.4 76.044h246V552H122l-84-98ZM13 158h18.434v253.009H46.92v12.225L86 453H46.92L13 411.009V158Z"
        fill="#514E4B"
        stroke="#000"
      />
      <Path
        d="M37.136 452 14 412l35 40H37.136ZM13 144v15h20v-15H13ZM86.993 74.544 33 141h23.053l44.894-59.544H124V57H86.993v17.544Z"
        fill="#514E4B"
        stroke="#000"
      />
      <Path d="M86 54h38v29H95v-9.667h-9V54Z" fill="#514E4B" stroke="#000" />
      <Circle cx={110.5} cy={284.5} r={8.5} fill={c17} onPress={handlepress17} />
      <Ellipse cx={182.5} cy={251.5} rx={8.5} ry={9.5} fill={c19}  onPress={handlepress19} />
      <Ellipse cx={51} cy={190} rx={8} ry={9} fill={c6}  onPress={handlepress6}/>
      <Ellipse cx={92} cy={132} rx={8} ry={9} fill={c5}  onPress={handlepress5}/>
      <Ellipse cx={50} cy={276.5} rx={8} ry={8.5} fill={c7}  onPress={handlepress7} />
      <Ellipse cx={53} cy={366.5} rx={9} ry={8.5} fill={c8}  onPress={handlepress8}/>
      <Circle cx={331} cy={486} r={9} fill={c12}  onPress={handlepress12}/>
      <Ellipse cx={230} cy={486} rx={8} ry={9} fill={c11}  onPress={handlepress11}/>
      <Ellipse cx={137.5} cy={486} rx={8.5} ry={9} fill={c10}  onPress={handlepress10}/>
      <Ellipse cx={130} cy={395.5} rx={8} ry={9.5} fill={c15}  onPress={handlepress15}/>
      <Ellipse cx={189} cy={329.5} rx={8} ry={8.5} fill={c16}  onPress={handlepress16}/>
      <Ellipse cx={231} cy={349.5} rx={8} ry={9.5} fill={c14}  onPress={handlepress14}/>
      <Ellipse cx={230} cy={408.5} rx={8} ry={8.5} fill={c13}  onPress={handlepress13}/>
      <Ellipse cx={87} cy={438.5} rx={8} ry={9.5} fill={c9}  onPress={handlepress9}/>
      <Ellipse cx={344.5} cy={74} rx={8.5} ry={9} fill={c2}  onPress={handlepress2}/>
      <Circle cx={138} cy={76} r={9} fill={c4}  onPress={handlepress4}/>
      <Ellipse cx={240} cy={74} rx={8} ry={9} fill={c3}  onPress={handlepress3}/>
      <Circle cx={344.5} cy={196.5} r={8.5} fill={c1}  onPress={handlepress1} />
      <Ellipse cx={132} cy={193.5} rx={8} ry={8.5} fill={c25}  onPress={handlepress25}/>
      <Path
        d="M196 183V88h14.04v83.063H235V183h-39Z"
        fill="#6D8252"
        stroke="#000"
      />
      <Path
        d="M264.241 173.251V85H287v98h-55v-9.749h32.241Z"
        fill="#6D8252"
        stroke="#000"
      />
      <Path
        d="M321 489h-79M222 489h-75M128 486l-34-42M227 401v-40M94 433l31-29M137 389l51-52M54 357v-73M51 267v-68M63 280h39M122 284h41M57 184l30-42M100 126l34-39M147 74h82M249 75h86M347 85v103M237 194h-94M132 186V87"
        stroke="#000"
      />
      <Ellipse cx={239} cy={224} rx={8} ry={9} fill={c20}  onPress={handlepress20}/>
      <Ellipse cx={294} cy={250.5} rx={8} ry={9.5} fill={c21}  onPress={handlepress21}/>
      <Circle cx={286.5} cy={327.5} r={8.5} fill={c23}  onPress={handlepress23}/>
      <Ellipse cx={175} cy={289.5} rx={8} ry={8.5} fill={c18}  onPress={handlepress18}/>
      <Ellipse cx={300} cy={288.5} rx={8} ry={8.5} fill={c22}  onPress={handlepress22}/>
      <Path
        d="m176 299 7 24M240 352l38-19M173 280l6-18M192 246l41-24M247 222l43 24M292 319l9-24M199 337l24 12M302 280l-8-19"
        stroke="#000"
      />
      <Ellipse cx={248} cy={196.5} rx={9} ry={8.5} fill={c24}  onPress={handlepress24}/>
      <Path d="M260 195h73" stroke="#000" />
      <Path
        d="M293.415 356h-1.108l3.204-8.727h1.091l3.205 8.727h-1.108l-2.608-7.347h-.068L293.415 356Zm.409-3.409h4.466v.937h-4.466v-.937Zm7.342 3.409v-8.727h2.949c.682 0 1.242.116 1.679.349.438.23.761.547.972.95.21.404.315.863.315 1.377s-.105.97-.315 1.368c-.211.397-.533.71-.968.937-.434.225-.99.337-1.666.337h-2.386v-.955h2.352c.466 0 .841-.068 1.125-.204.287-.137.494-.33.622-.58a1.94 1.94 0 0 0 .196-.903c0-.35-.065-.655-.196-.916a1.333 1.333 0 0 0-.626-.605c-.287-.145-.666-.218-1.138-.218h-1.858V356h-1.057Zm4.108-3.92 2.148 3.92h-1.227l-2.114-3.92h1.193Zm3.091-3.87v-.937h6.545v.937h-2.744V356h-1.057v-7.79h-2.744Zm9.233-.937V356h-1.057v-8.727h1.057Zm2.119 8.727v-8.727h5.233v.937h-4.176v2.949h3.784v.938h-3.784V356h-1.057Zm6.311 0h-1.108l3.205-8.727h1.091L332.42 356h-1.108l-2.608-7.347h-.068L326.028 356Zm.409-3.409h4.466v.937h-4.466v-.937ZM340.392 350h-1.057a2.2 2.2 0 0 0-.89-1.381 2.405 2.405 0 0 0-.729-.358 2.931 2.931 0 0 0-.835-.119c-.529 0-1.007.134-1.436.401-.427.267-.766.66-1.019 1.18-.25.52-.375 1.158-.375 1.913 0 .756.125 1.394.375 1.914.253.52.592.913 1.019 1.18.429.267.907.401 1.436.401.289 0 .568-.04.835-.12a2.44 2.44 0 0 0 .729-.353 2.248 2.248 0 0 0 .89-1.385h1.057a3.49 3.49 0 0 1-.435 1.197c-.21.352-.471.652-.784.899a3.418 3.418 0 0 1-1.052.559c-.387.127-.8.191-1.24.191-.745 0-1.407-.181-1.986-.545-.58-.364-1.036-.881-1.368-1.551-.332-.671-.499-1.466-.499-2.387 0-.92.167-1.716.499-2.386.332-.67.788-1.188 1.368-1.551.579-.364 1.241-.546 1.986-.546.44 0 .853.064 1.24.192.389.128.74.316 1.052.563.313.244.574.542.784.895.211.349.356.748.435 1.197Zm1.231-1.79v-.937h6.545v.937h-2.744V356h-1.057v-7.79h-2.744Zm12.949 1.245a1.34 1.34 0 0 0-.622-1.006c-.364-.239-.81-.358-1.338-.358-.387 0-.725.062-1.015.187a1.617 1.617 0 0 0-.673.516 1.237 1.237 0 0 0-.239.746c0 .233.056.433.167.601.113.164.258.302.434.413.176.108.361.197.554.268.193.069.371.124.533.167l.886.238c.228.06.48.142.759.247.281.106.549.249.805.431.259.179.472.409.639.69.168.281.252.627.252 1.036a2.3 2.3 0 0 1-.371 1.278c-.244.381-.602.683-1.074.908-.469.224-1.038.336-1.709.336-.625 0-1.166-.1-1.623-.302a2.583 2.583 0 0 1-1.074-.844 2.404 2.404 0 0 1-.439-1.257h1.091c.028.33.139.602.332.818.196.213.443.372.742.477.301.103.625.154.971.154.404 0 .766-.065 1.087-.196.321-.134.575-.318.763-.554.187-.239.281-.517.281-.835 0-.29-.081-.526-.243-.708a1.786 1.786 0 0 0-.639-.443 6.614 6.614 0 0 0-.857-.298l-1.073-.307c-.682-.196-1.222-.476-1.62-.84-.397-.363-.596-.839-.596-1.427 0-.489.132-.915.396-1.279.267-.366.625-.65 1.074-.852a3.636 3.636 0 0 1 1.513-.307c.562 0 1.062.101 1.5.303.437.199.784.472 1.039.818.259.347.395.74.409 1.181h-1.022ZM88.057 233v-8.727h2.949c.684 0 1.244.123 1.679.37.437.245.761.576.971.993.21.418.316.884.316 1.398 0 .514-.105.982-.316 1.402a2.341 2.341 0 0 1-.963 1.006c-.434.247-.991.37-1.67.37h-2.114v-.937h2.08c.468 0 .845-.081 1.129-.243a1.45 1.45 0 0 0 .618-.656c.13-.279.196-.592.196-.942 0-.349-.066-.662-.196-.937a1.396 1.396 0 0 0-.622-.648c-.287-.159-.668-.239-1.142-.239h-1.858V233h-1.057Zm7.084 0h-1.108l3.205-8.727h1.09l3.205 8.727h-1.108l-2.608-7.347h-.068L95.141 233Zm.41-3.409h4.465v.937H95.55v-.937Zm8.399-5.318V233h-1.057v-8.727h1.057Zm9.039 0V233h-1.023l-4.755-6.852h-.086V233h-1.056v-8.727h1.022l4.773 6.869h.085v-6.869h1.04Zm1.637.937v-.937h6.546v.937h-2.744V233h-1.057v-7.79h-2.745Zm9.234-.937V233h-1.057v-8.727h1.057Zm9.039 0V233h-1.023l-4.755-6.852h-.085V233h-1.057v-8.727h1.022l4.773 6.869h.085v-6.869h1.04ZM140.98 227a3.095 3.095 0 0 0-.371-.771 2.395 2.395 0 0 0-.541-.588 2.267 2.267 0 0 0-.708-.371 2.824 2.824 0 0 0-.869-.128c-.517 0-.987.134-1.41.401-.424.267-.76.66-1.01 1.18-.25.52-.375 1.158-.375 1.913 0 .756.126 1.394.379 1.914s.595.913 1.027 1.18c.432.267.918.401 1.457.401.5 0 .941-.107 1.321-.32.384-.216.682-.52.895-.912.216-.395.324-.859.324-1.393l.324.068h-2.625v-.938h3.324v.938c0 .719-.154 1.344-.46 1.875a3.185 3.185 0 0 1-1.262 1.236c-.534.289-1.148.434-1.841.434-.772 0-1.451-.181-2.037-.545-.582-.364-1.037-.881-1.363-1.551-.324-.671-.486-1.466-.486-2.387 0-.69.092-1.311.277-1.862a4.125 4.125 0 0 1 .793-1.415c.34-.389.744-.687 1.21-.895a3.744 3.744 0 0 1 1.538-.311c.46 0 .889.07 1.287.209a3.467 3.467 0 0 1 1.858 1.483c.21.347.355.732.435 1.155h-1.091Zm7.725-.545a1.341 1.341 0 0 0-.623-1.006c-.363-.239-.809-.358-1.338-.358-.386 0-.724.062-1.014.187a1.617 1.617 0 0 0-.673.516 1.237 1.237 0 0 0-.239.746c0 .233.056.433.166.601.114.164.259.302.435.413.176.108.361.197.554.268.193.069.371.124.533.167l.886.238c.227.06.48.142.759.247.281.106.549.249.805.431.258.179.472.409.639.69.168.281.252.627.252 1.036a2.3 2.3 0 0 1-.371 1.278c-.244.381-.602.683-1.074.908-.469.224-1.038.336-1.709.336-.625 0-1.166-.1-1.623-.302a2.583 2.583 0 0 1-1.074-.844 2.404 2.404 0 0 1-.439-1.257h1.091c.028.33.139.602.332.818.196.213.443.372.742.477.301.103.625.154.971.154.404 0 .766-.065 1.087-.196.321-.134.575-.318.763-.554.187-.239.281-.517.281-.835 0-.29-.081-.526-.243-.708a1.786 1.786 0 0 0-.639-.443 6.614 6.614 0 0 0-.857-.298l-1.074-.307c-.681-.196-1.221-.476-1.619-.84-.398-.363-.597-.839-.597-1.427 0-.489.133-.915.397-1.279.267-.366.625-.65 1.074-.852a3.632 3.632 0 0 1 1.512-.307c.563 0 1.063.101 1.5.303.438.199.785.472 1.04.818.259.347.395.74.409 1.181h-1.022ZM174.906 162.731l-8.727.023-.003-1.057 7.79-.02-.012-4.057.938-.003.014 5.114Zm-8.749-7.784 8.728-.023.002 1.057-8.727.023-.003-1.057Zm8.722-2.142-8.728.023-.008-3.051c-.002-.608.102-1.11.311-1.505.206-.396.485-.69.837-.884a2.355 2.355 0 0 1 1.163-.293c.375-.001.685.065.929.198.245.13.439.302.581.518.143.213.249.444.318.694l.085-.001c.016-.267.109-.535.279-.806.169-.27.413-.496.731-.679.318-.183.707-.275 1.167-.276.437-.001.831.097 1.181.295.35.198.628.511.834.94.205.428.309.986.311 1.674l.009 3.153Zm-.941-1.054-.006-2.097c-.001-.69-.136-1.18-.404-1.469a1.285 1.285 0 0 0-.981-.436 1.562 1.562 0 0 0-.818.228 1.628 1.628 0 0 0-.603.645c-.153.279-.229.608-.228.989l.006 2.148 3.034-.008Zm-3.954.01-.006-1.96a1.93 1.93 0 0 0-.19-.86 1.495 1.495 0 0 0-.53-.613 1.408 1.408 0 0 0-.801-.228 1.327 1.327 0 0 0-.975.404c-.269.267-.403.691-.402 1.27l.006 1.995 2.898-.008Zm4.873-6.76-8.727.022-.008-2.948c-.002-.682.113-1.242.345-1.68a2.22 2.22 0 0 1 .947-.974 2.921 2.921 0 0 1 1.376-.319c.514-.002.97.102 1.368.311.399.21.712.531.941.965.225.434.339.989.341 1.666l.006 2.386-.954.002-.007-2.352c-.001-.466-.07-.841-.207-1.124a1.288 1.288 0 0 0-.582-.621 1.94 1.94 0 0 0-.903-.194c-.35.001-.655.067-.916.199a1.34 1.34 0 0 0-.604.628c-.144.287-.215.667-.214 1.138l.005 1.858 7.79-.02.003 1.057Zm-3.932-4.098 3.915-2.158.003 1.227-3.914 2.124-.004-1.193Zm3.91-3.936.003 1.108-8.736-3.182-.003-1.091 8.718-3.227.003 1.108-7.339 2.627v.068l7.354 2.589Zm-3.41-.4-.013-4.466.938-.003.012 4.466-.937.003Zm3.388-7.352-8.727.023-.008-2.949c-.002-.681.113-1.241.345-1.679.229-.439.545-.763.947-.975a2.936 2.936 0 0 1 1.376-.318c.514-.002.97.102 1.369.311.398.209.711.531.94.965.226.434.339.989.341 1.665l.007 2.387-.955.002-.006-2.352c-.002-.466-.071-.841-.208-1.124a1.291 1.291 0 0 0-.581-.621 1.945 1.945 0 0 0-.904-.194c-.35.001-.655.067-.916.199a1.33 1.33 0 0 0-.603.628c-.144.287-.216.666-.214 1.138l.005 1.858 7.79-.02.002 1.056Zm-3.931-4.097 3.914-2.158.004 1.227-3.915 2.124-.003-1.193Zm-4.814-2.513-.003-1.21 4.067-2.431-.001-.102-4.08-2.41-.003-1.21 5.139 3.14 3.597-.01.002 1.057-3.596.01-5.122 3.166Zm3.863-11.405.938-.002.01 3.818-.937.003-.011-3.819Zm-3.908-4.81 8.727-.023.003 1.057-7.619.02v.051l1.421 2.127-1.074.003-1.455-2.178-.003-1.057ZM315.256 164.765l-8.726.142-.019-1.057 7.789-.126-.069-4.057.937-.015.088 5.113Zm-8.86-7.664 8.726-.142.018 1.057-8.726.142-.018-1.057Zm8.689-2.26-8.726.141-.052-3.05c-.011-.608.086-1.111.289-1.509.201-.399.476-.697.825-.896a2.36 2.36 0 0 1 1.158-.309c.375-.006.686.056.932.185.247.127.443.297.589.511.145.211.254.44.327.689l.085-.001c.012-.267.102-.537.267-.81a2.04 2.04 0 0 1 .722-.689c.315-.187.702-.285 1.162-.292a2.35 2.35 0 0 1 1.186.279c.353.193.635.503.847.928.212.426.323.982.335 1.67l.054 3.153Zm-.955-1.042-.036-2.096c-.012-.69-.154-1.178-.426-1.464a1.283 1.283 0 0 0-.987-.422 1.548 1.548 0 0 0-.815.239 1.63 1.63 0 0 0-.594.653c-.148.281-.219.611-.213.992l.037 2.147 3.034-.049Zm-3.954.064-.034-1.96a1.93 1.93 0 0 0-.202-.857 1.5 1.5 0 0 0-.539-.605 1.396 1.396 0 0 0-.805-.217 1.329 1.329 0 0 0-.969.416c-.265.272-.393.697-.383 1.276l.034 1.995 2.898-.048Zm4.775-6.826-8.726.142-.05-2.949c-.012-.681.095-1.243.32-1.684a2.23 2.23 0 0 1 .934-.987c.4-.217.856-.329 1.371-.338.514-.008.971.09 1.373.294.401.203.719.521.954.952.232.43.353.984.365 1.66l.041 2.386-.955.016-.04-2.352c-.008-.466-.083-.84-.224-1.122a1.294 1.294 0 0 0-.59-.613 1.948 1.948 0 0 0-.907-.181 2.024 2.024 0 0 0-.912.211 1.342 1.342 0 0 0-.595.636c-.139.289-.205.67-.197 1.141l.032 1.858 7.788-.127.018 1.057Zm-3.99-4.044 3.883-2.211.021 1.227-3.884 2.177-.02-1.193Zm3.853-3.988.019 1.107-8.782-3.062-.018-1.091 8.671-3.346.019 1.108-7.301 2.727.001.068 7.391 2.489Zm-3.416-.354-.077-4.465.938-.016.076 4.466-.937.015Zm3.283-7.397-8.727.142-.05-2.948c-.012-.682.095-1.244.32-1.685a2.23 2.23 0 0 1 .934-.987c.4-.216.857-.329 1.371-.337.514-.009.972.089 1.373.293.401.203.719.521.954.952.232.431.353.984.365 1.66l.041 2.386-.954.016-.041-2.352c-.008-.466-.082-.84-.224-1.122a1.291 1.291 0 0 0-.59-.612 1.947 1.947 0 0 0-.906-.182c-.35.006-.654.076-.913.211a1.335 1.335 0 0 0-.594.636c-.14.29-.206.67-.198 1.141l.032 1.858 7.788-.126.019 1.056Zm-3.991-4.043 3.883-2.212.021 1.228-3.883 2.177-.021-1.193Zm-4.849-2.447-.021-1.21 4.032-2.486-.002-.102-4.115-2.354-.021-1.21 5.184 3.069 3.597-.058.018 1.056-3.596.059-5.076 3.236Zm3.699-11.456.937-.016.065 3.818-.937.015-.065-3.817Zm4.808-1.421-.767.013-3.202-2.829a19.564 19.564 0 0 0-.977-.82 3.595 3.595 0 0 0-.784-.473 1.885 1.885 0 0 0-.77-.15 1.418 1.418 0 0 0-.793.235c-.222.148-.392.35-.509.605-.118.255-.174.54-.169.855.006.335.08.627.224.874.14.245.335.434.585.566.249.13.54.192.872.186l.018 1.006c-.512.008-.962-.102-1.353-.332a2.459 2.459 0 0 1-.92-.948 2.921 2.921 0 0 1-.347-1.371 2.789 2.789 0 0 1 .3-1.365c.21-.398.495-.712.858-.943.363-.23.768-.349 1.217-.356.321-.005.636.048.945.159.306.109.648.302 1.028.58.377.275.838.659 1.384 1.15l2.13 1.926.068-.001-.07-4.057.938-.015.094 5.505ZM191.316 401.503c.282.114.561.188.836.219.277.036.546.028.81-.025.262-.051.513-.147.754-.29.241-.142.466-.331.675-.567a2.54 2.54 0 0 0 .632-1.312c.077-.488-.001-.993-.232-1.515-.231-.521-.636-1.026-1.214-1.513-.578-.486-1.15-.803-1.716-.949-.565-.146-1.094-.144-1.585.007a2.771 2.771 0 0 0-1.275.831c-.332.373-.544.771-.634 1.193-.089.425-.055.844.103 1.256.158.415.442.795.85 1.139l-.267.198 1.745-1.961.717.604-2.209 2.484-.717-.604c-.55-.463-.926-.981-1.129-1.552a3.06 3.06 0 0 1-.106-1.739c.133-.585.43-1.137.891-1.655.513-.578 1.104-.968 1.771-1.171.665-.2 1.363-.207 2.093-.019.728.19 1.444.581 2.148 1.174.528.445.941.914 1.24 1.407.299.497.484.998.555 1.504.071.505.031.999-.12 1.48a3.681 3.681 0 0 1-.785 1.35 3.89 3.89 0 0 1-1.015.827 3.585 3.585 0 0 1-2.369.433 3.52 3.52 0 0 1-1.172-.419l.725-.815Zm-6.61-1.594.737-.828 4.544 8.017-.725.815-8.804-3.229.736-.827 7.352 2.784.046-.051-3.886-6.681Zm2.336 2.502-2.969 3.336-.717-.604 2.969-3.336.717.604Zm-7.488 3.289 6.675 5.622-.703.79-5.957-5.019-2.697 3.031-.717-.604 3.399-3.82Zm-4.487 5.043 6.675 5.622-.702.79-5.958-5.018-2.697 3.031-.717-.604 3.399-3.821Zm-4.486 5.043 6.675 5.623-3.501 3.935-.717-.604 2.798-3.146-2.255-1.9-2.617 2.942-.718-.604 2.618-2.942-2.269-1.91-2.844 3.196-.717-.604 3.547-3.986Zm-4.767 5.358 6.674 5.623-1.96 2.203c-.453.509-.914.852-1.383 1.029a2.312 2.312 0 0 1-1.372.114 2.994 2.994 0 0 1-1.263-.651c-.393-.331-.672-.704-.836-1.117a2.134 2.134 0 0 1-.074-1.327c.117-.469.4-.956.85-1.461l1.586-1.783.73.615-1.564 1.757c-.309.348-.506.672-.591.972-.086.303-.077.582.03.839.106.26.293.503.56.728.268.225.545.373.831.444.287.071.58.044.88-.078.301-.121.609-.358.922-.71l1.235-1.389-5.958-5.018.703-.79Zm.268 5.595-4.426-.921.815-.917 4.404.947-.793.891Zm1.998 4.983-.805.905-4.724-.817-.068.077 1.507 4.433-.805.904-1.828-5.661-2.751-2.318.703-.789 2.751 2.317 6.02.949Zm-10.553 6.004-.717-.603 2.538-2.853.717.604-2.538 2.852Zm-4.588-2.11.586.494.497 4.184c.058.491.119.905.182 1.245.065.341.155.628.27.862.115.238.275.443.479.615.235.198.487.314.757.348.268.036.533 0 .794-.111.261-.11.497-.283.707-.518.222-.251.364-.514.423-.791.06-.272.041-.539-.057-.8a1.77 1.77 0 0 0-.532-.71l.669-.751c.391.329.656.706.794 1.132.139.425.156.858.051 1.301a2.853 2.853 0 0 1-.667 1.237c-.34.382-.724.651-1.151.807-.428.156-.856.2-1.286.131a2.34 2.34 0 0 1-1.159-.536 2.595 2.595 0 0 1-.604-.737c-.157-.281-.285-.648-.383-1.102a17.92 17.92 0 0 1-.264-1.754l-.3-2.815-.052-.044-2.697 3.031-.717-.604 3.66-4.114Z"
        fill="#fff"
      />
      <Path
        d="m240 166.907-8.727.06-.039-5.232.938-.007.03 4.176 2.949-.02-.028-3.784.938-.007.028 3.784 3.903-.027.008 1.057Zm-4.469-14.376c.92-.006 1.717.154 2.39.482.673.328 1.193.78 1.561 1.357.368.577.554 1.238.56 1.982.005.744-.172 1.408-.531 1.99-.359.582-.873 1.041-1.541 1.378-.668.337-1.462.509-2.383.515-.92.007-1.717-.154-2.39-.482-.673-.328-1.193-.78-1.561-1.357-.368-.577-.554-1.238-.56-1.982-.005-.744.172-1.407.531-1.989.36-.582.873-1.042 1.541-1.379.668-.337 1.463-.509 2.383-.515Zm.007 1.023c-.755.005-1.392.136-1.91.392-.518.254-.909.596-1.173 1.027a2.637 2.637 0 0 0-.39 1.434c.004.529.141 1.006.411 1.434.27.424.666.761 1.188 1.01.521.246 1.16.367 1.916.362.755-.006 1.392-.135 1.91-.389.518-.256.909-.598 1.173-1.026.264-.431.394-.911.39-1.439a2.644 2.644 0 0 0-.411-1.429c-.27-.427-.666-.764-1.188-1.01-.521-.25-1.16-.372-1.916-.366Zm-2.237-7.558a1.34 1.34 0 0 0-1.001.63c-.236.365-.352.812-.348 1.34.003.386.068.724.195 1.013.127.286.301.509.521.67.219.157.469.235.747.233a1.06 1.06 0 0 0 .6-.17c.164-.115.3-.261.41-.438.106-.177.195-.362.264-.555.067-.194.121-.372.162-.534l.233-.888a7.69 7.69 0 0 1 .241-.76c.103-.282.245-.552.425-.809a2.19 2.19 0 0 1 .685-.644c.28-.169.625-.256 1.034-.258.472-.004.899.117 1.281.362.383.241.688.597.916 1.067.228.467.344 1.036.349 1.707.004.625-.093 1.166-.291 1.625a2.583 2.583 0 0 1-.836 1.08c-.359.261-.777.41-1.254.447l-.008-1.09c.33-.031.602-.144.816-.338a1.8 1.8 0 0 0 .472-.745c.1-.302.149-.626.146-.973a2.862 2.862 0 0 0-.204-1.085 1.87 1.87 0 0 0-.559-.759 1.313 1.313 0 0 0-.837-.276c-.29.002-.525.085-.706.248a1.779 1.779 0 0 0-.439.642 6.858 6.858 0 0 0-.292.859l-.299 1.076c-.191.683-.467 1.225-.827 1.625-.361.4-.835.602-1.423.607a2.12 2.12 0 0 1-1.282-.388 2.63 2.63 0 0 1-.86-1.068 3.624 3.624 0 0 1-.318-1.511c-.004-.562.093-1.063.292-1.502.196-.438.466-.787.811-1.045.344-.261.737-.4 1.177-.417l.007 1.022Zm-.055-7.652a1.338 1.338 0 0 0-1.002.629c-.236.366-.352.813-.348 1.341.003.386.068.724.195 1.013.127.286.301.509.521.67.22.157.469.235.747.233.233-.002.433-.058.6-.17.164-.115.3-.261.41-.438.107-.177.195-.362.264-.556.067-.193.121-.371.163-.533l.232-.888c.058-.228.138-.482.241-.761.104-.282.245-.551.425-.808.177-.26.406-.474.686-.644.28-.169.624-.256 1.033-.259.472-.003.899.118 1.281.362.383.242.688.598.916 1.068.228.467.344 1.036.349 1.706.005.625-.092 1.167-.291 1.626a2.583 2.583 0 0 1-.836 1.08c-.359.261-.777.41-1.254.447l-.007-1.091c.329-.03.601-.143.815-.338a1.79 1.79 0 0 0 .472-.744c.1-.302.149-.626.146-.973a2.843 2.843 0 0 0-.204-1.085 1.86 1.86 0 0 0-.559-.759 1.313 1.313 0 0 0-.837-.276c-.29.002-.525.085-.706.248a1.764 1.764 0 0 0-.438.642 6.7 6.7 0 0 0-.292.859l-.299 1.076c-.191.683-.467 1.225-.828 1.625-.361.4-.835.602-1.423.606a2.113 2.113 0 0 1-1.282-.387 2.644 2.644 0 0 1-.86-1.068 3.639 3.639 0 0 1-.317-1.511c-.005-.562.093-1.063.291-1.502.196-.439.466-.787.811-1.045.344-.261.737-.4 1.177-.417l.008 1.022Zm-2.211-3.921 8.727-.06.008 1.057-8.727.06-.008-1.057Zm8.712-2.179-8.727.06-.008-1.057 7.79-.053-.03-4.057.937-.007.038 5.114Zm-.074-10.125-8.727.06-.022-2.948c-.005-.682.108-1.243.337-1.682a2.23 2.23 0 0 1 .944-.978c.401-.213.86-.321 1.374-.325.514-.003.971.099 1.37.306.399.208.714.528.944.961.228.433.344.988.349 1.664l.018 2.386-.955.007-.017-2.352c-.003-.466-.074-.841-.213-1.124a1.29 1.29 0 0 0-.584-.618 1.95 1.95 0 0 0-.905-.19c-.349.003-.654.07-.914.202a1.337 1.337 0 0 0-.601.631c-.143.288-.212.668-.209 1.139l.014 1.858 7.789-.054.008 1.057Zm-3.95-4.081 3.904-2.174.009 1.227-3.905 2.141-.008-1.194Zm-.523-10.928c.92-.006 1.717.155 2.39.482.672.328 1.193.781 1.561 1.358.367.577.554 1.237.56 1.982.005.744-.172 1.407-.531 1.989-.36.582-.874 1.042-1.542 1.379-.668.337-1.462.508-2.382.515-.921.006-1.717-.155-2.39-.482-.673-.328-1.193-.781-1.561-1.358-.368-.577-.555-1.237-.56-1.982-.006-.744.171-1.407.531-1.989.359-.582.873-1.042 1.541-1.379.668-.337 1.462-.508 2.383-.515Zm.007 1.023c-.756.005-1.392.136-1.91.392-.519.254-.909.596-1.173 1.027a2.648 2.648 0 0 0-.391 1.435c.004.528.141 1.006.412 1.433.27.424.666.761 1.187 1.01.522.247 1.161.367 1.916.362.756-.005 1.393-.135 1.911-.388.518-.257.909-.599 1.173-1.027a2.66 2.66 0 0 0 .39-1.439 2.647 2.647 0 0 0-.411-1.429c-.27-.427-.666-.764-1.188-1.01-.522-.249-1.16-.371-1.916-.366Zm-.074-10.163c.92-.006 1.717.154 2.39.482.673.328 1.193.78 1.561 1.357.368.577.554 1.238.56 1.982.005.744-.172 1.408-.531 1.99-.359.582-.873 1.041-1.541 1.378-.668.337-1.462.509-2.383.515-.92.007-1.717-.154-2.39-.482-.673-.328-1.193-.78-1.561-1.357-.368-.577-.554-1.238-.56-1.982-.005-.744.172-1.407.531-1.99.36-.582.873-1.041 1.541-1.378.668-.337 1.463-.509 2.383-.515Zm.007 1.023c-.755.005-1.392.136-1.91.392-.518.254-.909.596-1.173 1.027a2.637 2.637 0 0 0-.39 1.434c.004.529.141 1.006.411 1.433.27.425.666.762 1.188 1.011.521.246 1.16.367 1.916.362.755-.006 1.392-.135 1.91-.389.518-.256.909-.598 1.173-1.026.264-.431.394-.911.39-1.439a2.644 2.644 0 0 0-.411-1.429c-.27-.427-.666-.764-1.188-1.01-.521-.25-1.16-.372-1.916-.366Zm-4.384-2.77-.009-1.261 7.223-3.016-.001-.102-7.266-2.916-.009-1.261 8.727-.06.007.988-6.63.046v.085l6.651 2.681.007.955-6.611 2.773.001.085 6.63-.046.008.989-8.728.06ZM219.023 284a3.095 3.095 0 0 0-.371-.771 2.395 2.395 0 0 0-.541-.588 2.267 2.267 0 0 0-.708-.371 2.824 2.824 0 0 0-.869-.128c-.517 0-.987.134-1.41.401-.424.267-.76.66-1.01 1.18-.25.52-.375 1.158-.375 1.913 0 .756.126 1.394.379 1.914s.595.913 1.027 1.18c.432.267.918.401 1.457.401.5 0 .941-.107 1.321-.32.384-.216.682-.52.895-.912.216-.395.324-.859.324-1.393l.324.068h-2.625v-.938h3.324v.938c0 .719-.154 1.344-.46 1.875a3.185 3.185 0 0 1-1.262 1.236c-.534.289-1.148.434-1.841.434-.772 0-1.451-.181-2.037-.545-.582-.364-1.037-.881-1.363-1.551-.324-.671-.486-1.466-.486-2.387 0-.69.092-1.311.277-1.862a4.125 4.125 0 0 1 .793-1.415c.34-.389.744-.687 1.21-.895a3.744 3.744 0 0 1 1.538-.311c.46 0 .889.07 1.287.209a3.467 3.467 0 0 1 1.858 1.483c.21.347.355.732.435 1.155h-1.091Zm3.04 6h-1.108l3.205-8.727h1.091l3.204 8.727h-1.108l-2.608-7.347h-.068L222.063 290Zm.409-3.409h4.466v.937h-4.466v-.937Zm7.343 3.409v-8.727h2.948c.682 0 1.242.116 1.679.349.438.23.762.547.972.95.21.404.315.863.315 1.377s-.105.97-.315 1.368c-.21.397-.533.71-.967.937-.435.225-.99.337-1.666.337h-2.387v-.955h2.352c.466 0 .841-.068 1.125-.204.287-.137.495-.33.623-.58.13-.253.196-.554.196-.903 0-.35-.066-.655-.196-.916a1.336 1.336 0 0 0-.627-.605c-.287-.145-.666-.218-1.138-.218h-1.858V290h-1.056Zm4.108-3.92 2.147 3.92h-1.227l-2.114-3.92h1.194Zm6.261 3.92h-2.694v-8.727h2.813c.847 0 1.571.174 2.173.524a3.428 3.428 0 0 1 1.385 1.496c.321.647.482 1.423.482 2.326 0 .909-.162 1.692-.486 2.348a3.461 3.461 0 0 1-1.415 1.509c-.619.349-1.372.524-2.258.524Zm-1.637-.938h1.568c.722 0 1.32-.139 1.794-.417a2.577 2.577 0 0 0 1.062-1.189c.232-.514.349-1.126.349-1.837 0-.704-.115-1.311-.345-1.819a2.54 2.54 0 0 0-1.031-1.176c-.458-.276-1.027-.414-1.709-.414h-1.688v6.852Zm7.568.938v-8.727h5.267v.937h-4.21v2.949h3.938v.938h-3.938v2.965h4.279V290h-5.336Zm14.093-8.727V290h-1.023l-4.756-6.852h-.085V290h-1.057v-8.727h1.023l4.773 6.869h.085v-6.869h1.04Z"
        fill="#000"
      />
      <Path
        d="M361.345 64.783H124V55h249v128h-11.655V64.783Z"
        fill="#514E4B"
        stroke="#000"
      />
      <Path
        d="M317.057 594v-8.727h5.267v.937h-4.21v2.949h3.937v.938h-3.937v2.965h4.278V594h-5.335Zm14.092-8.727V594h-1.023l-4.755-6.852h-.085V594h-1.057v-8.727h1.022l4.773 6.869h.085v-6.869h1.04Zm1.638.937v-.937h6.545v.937h-2.744V594h-1.057v-7.79h-2.744Zm8.176 7.79v-8.727h2.949c.682 0 1.241.116 1.679.349.437.23.761.547.971.95.211.404.316.863.316 1.377s-.105.97-.316 1.368a2.22 2.22 0 0 1-.967.937c-.434.225-.99.337-1.666.337h-2.386v-.955h2.352c.466 0 .841-.068 1.125-.204.287-.137.494-.33.622-.58a1.94 1.94 0 0 0 .196-.903c0-.35-.065-.655-.196-.916a1.333 1.333 0 0 0-.626-.605c-.287-.145-.667-.218-1.138-.218h-1.858V594h-1.057Zm4.108-3.92 2.148 3.92h-1.228l-2.113-3.92h1.193Zm2.525-4.807h1.21l2.421 4.074h.102l2.42-4.074h1.211l-3.154 5.13V594h-1.057v-3.597l-3.153-5.13ZM289.939 568.939a1.502 1.502 0 0 0 0 2.122l9.546 9.546a1.502 1.502 0 0 0 2.122 0 1.502 1.502 0 0 0 0-2.122L293.121 570l8.486-8.485a1.502 1.502 0 0 0 0-2.122 1.502 1.502 0 0 0-2.122 0l-9.546 9.546ZM356 568.5h-65v3h65v-3ZM354.079 21.042a1.5 1.5 0 0 0-.037-2.12l-9.709-9.38a1.5 1.5 0 1 0-2.084 2.157l8.63 8.338-8.338 8.63a1.5 1.5 0 0 0 2.158 2.084l9.38-9.709ZM295.026 22.5l58-1-.052-3-58 1 .052 3ZM317.057 43v-8.727h5.267v.937h-4.21v2.95h3.937v.937h-3.937v2.965h4.278V43h-5.335Zm7.683-8.727 2.25 3.63h.068l2.25-3.63h1.245l-2.745 4.363L330.553 43h-1.245l-2.25-3.563h-.068L324.74 43h-1.244l2.812-4.364-2.812-4.363h1.244Zm8.245 0V43h-1.057v-8.727h1.057Zm1.641.937v-.937h6.546v.937h-2.744V43h-1.057v-7.79h-2.745Z"
        fill="#000"
      />
      <Path
        d="M94.023 364.682a3.1 3.1 0 0 0-.839-.17 2.4 2.4 0 0 0-.795.076 2.265 2.265 0 0 0-.723.341 2.818 2.818 0 0 0-.627.615c-.312.413-.49.868-.532 1.367-.043.498.068 1.004.331 1.517.264.514.697.998 1.3 1.454.602.457 1.187.741 1.754.853.567.112 1.087.077 1.56-.106.474-.183.874-.49 1.2-.92.302-.399.483-.814.543-1.246a2.266 2.266 0 0 0-.187-1.264c-.185-.411-.49-.777-.915-1.099l.25-.218-1.585 2.093-.748-.566 2.007-2.65.747.566c.573.434.979.934 1.217 1.499a3.18 3.18 0 0 1 .224 1.752c-.091.6-.346 1.177-.765 1.73-.466.616-1.021 1.047-1.664 1.294-.642.245-1.328.295-2.06.151-.73-.146-1.462-.497-2.196-1.053-.55-.417-.99-.865-1.317-1.345a4.125 4.125 0 0 1-.65-1.486 3.466 3.466 0 0 1 .017-1.505c.116-.497.343-.968.681-1.414.278-.367.592-.667.944-.9.35-.237.72-.404 1.11-.501a3.413 3.413 0 0 1 2.376.265l-.658.87Zm7.768-.066c-.25.331-.54.584-.869.759-.33.174-.675.25-1.033.228-.36-.023-.71-.163-1.05-.421-.298-.226-.496-.468-.593-.727a1.563 1.563 0 0 1-.084-.806c.043-.278.128-.556.256-.833.128-.281.267-.555.42-.821.199-.348.363-.628.491-.841.129-.216.201-.39.218-.52.018-.132-.038-.247-.167-.345l-.027-.02c-.335-.254-.665-.36-.99-.317-.323.041-.624.246-.903.615-.29.383-.434.746-.43 1.09.002.345.066.633.189.866l-.848.555c-.214-.376-.324-.744-.33-1.105a2.557 2.557 0 0 1 .193-1.03c.133-.327.3-.621.498-.884.127-.168.293-.345.499-.531.205-.191.446-.342.722-.453.278-.113.593-.145.942-.094.35.051.732.234 1.147.548l3.438 2.603-.607.802-.707-.535-.031.041c.072.14.125.322.158.547.033.224.015.476-.054.755-.069.28-.218.571-.448.874Zm-.628-.667c.241-.317.381-.632.421-.944a1.602 1.602 0 0 0-.107-.861 1.54 1.54 0 0 0-.493-.64l-.734-.556c.015.065-.004.168-.058.309-.054.137-.125.29-.213.458a20.687 20.687 0 0 1-.48.845c-.13.229-.234.458-.31.685a1.264 1.264 0 0 0-.06.638c.035.198.155.374.358.528.279.211.568.268.866.17.299-.102.569-.313.81-.632Zm-2.926-9.351 6.958 5.269-.607.802-6.958-5.269.607-.802Zm1.72-2.27 6.957 5.269-.607.801-6.958-5.268.607-.802Zm9.834 1.695c-.38.502-.82.852-1.318 1.049a2.812 2.812 0 0 1-1.573.129c-.55-.111-1.093-.368-1.628-.773-.534-.405-.931-.859-1.192-1.362a2.901 2.901 0 0 1-.335-1.548c.036-.528.233-1.028.59-1.499.206-.272.454-.506.745-.702.292-.197.621-.326.99-.389.366-.065.765-.036 1.195.087.431.123.89.369 1.377.738l.339.257-3.045 4.022-.693-.525 2.428-3.207a2.142 2.142 0 0 0-.922-.42 1.671 1.671 0 0 0-.922.082 1.753 1.753 0 0 0-.772.602c-.242.32-.372.656-.39 1.01-.019.349.051.681.208.996.157.315.379.581.667.799l.462.35c.394.298.779.483 1.156.555.377.068.729.033 1.057-.103a2.12 2.12 0 0 0 .856-.694c.16-.21.274-.423.344-.637.069-.219.091-.436.065-.651a1.566 1.566 0 0 0-.236-.634l.804-.61c.201.281.328.593.381.936.052.342.026.696-.078 1.064a3.308 3.308 0 0 1-.56 1.078Zm2.451-3.463-5.218-3.951.587-.775.788.597.041-.054a1.581 1.581 0 0 1-.238-.993c.028-.371.161-.712.397-1.025.045-.059.102-.131.171-.218.069-.087.123-.151.162-.193l.815.618a2.922 2.922 0 0 0-.172.163 2.29 2.29 0 0 0-.253.285 1.77 1.77 0 0 0-.354.8c-.045.276-.019.542.079.798.098.252.265.468.5.646l3.302 2.5-.607.802Zm5.164-2.753a2.203 2.203 0 0 1-.309.338 1.187 1.187 0 0 1-.229.174l-.552-.738c.197-.158.346-.316.445-.476a.776.776 0 0 0 .101-.549c-.029-.207-.139-.459-.33-.757l-.294-.459-6.707-2.042.659-.87 5.249 1.709.041-.055-3.068-4.589.659-.87 4.302 6.743c.194.304.323.596.389.877.067.283.07.554.009.814-.06.258-.182.508-.365.75Zm.592-11.822.747.566-2.305 3.044-.747-.566 2.305-3.044Zm-.691-6.57 6.957 5.269-.638.842-6.074-4.599-.031.04-.158 2.553-.856-.648.162-2.614.638-.843Z"
        fill="#fff"
      />
    </G>
    <Path d="M233 477v-62M80 431l-23-56" stroke="#000" />
    <Defs>
      <ClipPath id="a">
        <Path fill="#fff" d="M0 0h373v622H0z" />
      </ClipPath>
    </Defs>
     
    {/* <Modal
    animationType="slide"
    transparent={true}
    visible={modal}
    
    onRequestClose={()=>setmodal(false)}>
      <View style={{position:"absolute",bottom:2,width:"100%",}}>
        <View style={{backgroundColor:"#fff",}}>
      <Text style={{fontSize:20,marginLeft:160}}>{loc}</Text>
      </View>
      </View>
    </Modal> */}

         
      </Svg>
      
     
      <View>
     
      {/* {showValue? <Text style={{color: 'green', margin: 10,}}>LIBRARY</Text> : null} */}
      {/* <Button title="Show Answer" onPress={() => setShowValue(!showValue)} /> */}
      </View>
      <View style={{paddingBottom:140}}>
      <TouchableOpacity onPress={update} style={styles.submit}><Text style={styles.buttontext}>COMPUTE</Text></TouchableOpacity> 
      <TouchableOpacity onPress={reload} style={styles.submit1}><Text style={styles.buttontext}>RESET</Text></TouchableOpacity> 
      </View>
      {/* </ReactNativeZoomableView> */}
    </View>
     </ReactNativeZoomableView>
    
  );
};

export default SvgComponent;

const styles = StyleSheet.create({
  submit: {
    marginTop: 10,
    backgroundColor: "#618092",
    width: "30%",
    padding: 8,
    marginLeft:10,
  },
  submit1: {
    marginTop: 10,
    backgroundColor: "#618092",
    width: "30%",
    padding: 8,
    marginTop:-40,
    marginLeft:260,
    
  },
  buttontext: {
    color: "white",
    fontWeight: "700",
    fontSize: 16,
  },
  container:{
    backgroundColor:"#D9D9D9",
    paddingTop:20,
  }
});

